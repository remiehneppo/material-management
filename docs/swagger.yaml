basePath: /api/v1
definitions:
  types.CreateEquipmentMachineryReq:
    properties:
      name:
        type: string
      order:
        type: integer
      sector:
        type: string
    required:
    - name
    - order
    - sector
    type: object
  types.CreateMaintenanceRequest:
    properties:
      maintenance_number:
        type: string
      maintenance_tier:
        type: string
      project:
        type: string
      project_code:
        type: string
    required:
    - maintenance_number
    - maintenance_tier
    - project
    - project_code
    type: object
  types.CreateMaterialRequestReq:
    properties:
      description:
        type: string
      maintenance_number:
        type: string
      maintenance_tier:
        type: string
      materials_for_equipment:
        additionalProperties:
          $ref: '#/definitions/types.MaterialsForEquipment'
        type: object
      project:
        type: string
      sector:
        type: string
    required:
    - maintenance_number
    - maintenance_tier
    - materials_for_equipment
    - project
    - sector
    type: object
  types.EquipmentMachinery:
    properties:
      id:
        type: string
      name:
        type: string
      order:
        type: integer
      sector:
        type: string
    type: object
  types.EquipmentMachineryFilter:
    properties:
      name:
        type: string
      sector:
        type: string
    type: object
  types.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  types.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  types.Maintenance:
    properties:
      id:
        type: string
      maintenance_number:
        type: string
      maintenance_tier:
        type: string
      project:
        type: string
      project_code:
        type: string
      year:
        type: integer
    type: object
  types.MaintenanceFilter:
    properties:
      maintenance_number:
        type: string
      maintenance_tier:
        type: string
      project:
        type: string
    type: object
  types.Material:
    properties:
      name:
        type: string
      quantity:
        type: number
      unit:
        type: string
    type: object
  types.MaterialRequest:
    properties:
      description:
        type: string
      id:
        type: string
      maintenance_instance_id:
        type: string
      materials_for_equipment:
        additionalProperties:
          $ref: '#/definitions/types.MaterialsForEquipment'
        type: object
      num_of_request:
        type: integer
      requested_at:
        type: integer
      requested_by:
        type: string
      sector:
        type: string
    type: object
  types.MaterialRequestExport:
    properties:
      material_request_id:
        type: string
    required:
    - material_request_id
    type: object
  types.MaterialRequestFilter:
    properties:
      equipment_machinery_id:
        type: string
      maintenance_instance_id:
        type: string
      num_of_request:
        type: integer
      requested_at_end:
        type: integer
      requested_at_start:
        type: integer
      requested_by:
        type: string
      sector:
        type: string
    type: object
  types.MaterialsForEquipment:
    properties:
      consumable_supplies:
        additionalProperties:
          $ref: '#/definitions/types.Material'
        type: object
      replacement_materials:
        additionalProperties:
          $ref: '#/definitions/types.Material'
        type: object
    type: object
  types.MaterialsProfile:
    properties:
      equipment_machinery_id:
        type: string
      estimate:
        $ref: '#/definitions/types.MaterialsForEquipment'
      id:
        type: string
      maintenance_instance_id:
        type: string
      reality:
        $ref: '#/definitions/types.MaterialsForEquipment'
      sector:
        type: string
    type: object
  types.RefreshRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  types.Response:
    properties:
      data: {}
      message:
        type: string
      status:
        type: boolean
    type: object
  types.UpdateNumberOfRequestReq:
    properties:
      material_request_id:
        type: string
      num_of_request:
        type: integer
    required:
    - material_request_id
    - num_of_request
    type: object
host: localhost:8088
info:
  contact:
    email: bao.tran080898@gmail.com
    name: Bao Tran
    url: http://github.com/remiehneppo
  description: Materials Management API with Golang
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Materials Management API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates user and returns access and refresh tokens
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/types.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.LoginResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/types.Response'
        "401":
          description: Authentication failed
          schema:
            $ref: '#/definitions/types.Response'
      summary: User login
      tags:
      - authentication
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Logs out the current user
      produces:
      - application/json
      responses:
        "200":
          description: Logout successful
          schema:
            $ref: '#/definitions/types.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.Response'
      security:
      - BearerAuth: []
      summary: User logout
      tags:
      - authentication
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refreshes access token using a valid refresh token
      parameters:
      - description: Refresh token
        in: body
        name: refresh
        required: true
        schema:
          $ref: '#/definitions/types.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Refresh successful
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.LoginResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/types.Response'
        "401":
          description: Invalid refresh token
          schema:
            $ref: '#/definitions/types.Response'
      summary: Refresh tokens
      tags:
      - authentication
  /equipment-machinery:
    post:
      consumes:
      - application/json
      description: Create a new equipment machinery with name, sector, and order
      parameters:
      - description: Equipment machinery creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.CreateEquipmentMachineryReq'
      produces:
      - application/json
      responses:
        "201":
          description: Equipment machinery created successfully
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/types.Response'
        "500":
          description: Failed to create equipment machinery
          schema:
            $ref: '#/definitions/types.Response'
      security:
      - BearerAuth: []
      summary: Create a new equipment machinery
      tags:
      - equipment-machinery
  /equipment-machinery/filter:
    post:
      consumes:
      - application/json
      description: Filter and retrieve equipment machinery based on sector and other
        criteria
      parameters:
      - description: Equipment machinery filter request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.EquipmentMachineryFilter'
      produces:
      - application/json
      responses:
        "200":
          description: Equipment machinery filtered successfully
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.EquipmentMachinery'
                  type: array
              type: object
        "400":
          description: Invalid filter parameters
          schema:
            $ref: '#/definitions/types.Response'
        "500":
          description: Failed to filter equipment machinery
          schema:
            $ref: '#/definitions/types.Response'
      security:
      - BearerAuth: []
      summary: Filter equipment machinery
      tags:
      - equipment-machinery
  /maintenance:
    post:
      consumes:
      - application/json
      description: Create a new maintenance record
      parameters:
      - description: Maintenance creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.CreateMaintenanceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Maintenance created successfully
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/types.Response'
        "500":
          description: Failed to create maintenance
          schema:
            $ref: '#/definitions/types.Response'
      security:
      - BearerAuth: []
      summary: Create a new maintenance
      tags:
      - maintenance
  /maintenance/{id}:
    get:
      consumes:
      - application/json
      description: Get maintenance details by ID
      parameters:
      - description: Maintenance ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Maintenance retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/types.Response'
        "500":
          description: Failed to retrieve maintenance
          schema:
            $ref: '#/definitions/types.Response'
      security:
      - BearerAuth: []
      summary: Get maintenance by ID
      tags:
      - maintenance
  /maintenance/filter:
    post:
      consumes:
      - application/json
      description: Filter and retrieve maintenance records based on query parameters
      parameters:
      - description: Maintenance filter request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.MaintenanceFilter'
      produces:
      - application/json
      responses:
        "200":
          description: Maintenance filtered successfully
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Maintenance'
                  type: array
              type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/types.Response'
        "500":
          description: Failed to filter maintenance
          schema:
            $ref: '#/definitions/types.Response'
      security:
      - BearerAuth: []
      summary: Filter maintenance records
      tags:
      - maintenance
  /materials-profiles:
    get:
      consumes:
      - application/json
      description: Retrieve materials profiles based on filter criteria
      parameters:
      - description: Sector filter
        in: query
        name: sector
        type: string
      - description: Project filter
        in: query
        name: project
        type: string
      - description: Maintenance tier filter
        in: query
        name: maintenance_tier
        type: string
      - description: Maintenance number filter
        in: query
        name: maintenance_number
        type: string
      - description: Equipment machinery name filter
        in: query
        name: equipment_machinery_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Materials profiles retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.MaterialsProfile'
                  type: array
              type: object
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/types.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.Response'
      security:
      - BearerAuth: []
      summary: Filter materials profiles
      tags:
      - materials-profiles
  /materials-profiles/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific materials profile using its ID
      parameters:
      - description: Materials Profile ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Materials profile retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.MaterialsProfile'
              type: object
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/types.Response'
        "404":
          description: Materials profile not found
          schema:
            $ref: '#/definitions/types.Response'
      security:
      - BearerAuth: []
      summary: Get materials profile by ID
      tags:
      - materials-profiles
  /materials-profiles/upload-estimate:
    post:
      consumes:
      - multipart/form-data
      description: Upload an Excel sheet to update materials estimate profile
      parameters:
      - description: Excel file to upload
        in: formData
        name: file
        required: true
        type: file
      - description: JSON request data containing project, maintenance_tier, maintenance_number,
          sheet_name, sector
        in: formData
        name: request
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Materials estimate profile updated successfully
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/types.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.Response'
      security:
      - BearerAuth: []
      summary: Update materials estimate profile by uploading a sheet
      tags:
      - materials-profiles
  /materials-request:
    post:
      consumes:
      - application/json
      description: Create a new material request with the provided details
      parameters:
      - description: Material request data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.CreateMaterialRequestReq'
      produces:
      - application/json
      responses:
        "200":
          description: Material request created successfully
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/types.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.Response'
      security:
      - BearerAuth: []
      summary: Create a new material request
      tags:
      - material-requests
  /materials-request/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific material request using its ID
      parameters:
      - description: Material Request ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Material request retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.MaterialRequest'
              type: object
        "400":
          description: Invalid request - ID is required
          schema:
            $ref: '#/definitions/types.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.Response'
      security:
      - BearerAuth: []
      summary: Get material request by ID
      tags:
      - material-requests
  /materials-request/export:
    post:
      consumes:
      - application/json
      description: Export a material request to a downloadable DOCX document
      parameters:
      - description: Export request data
        in: body
        name: export
        required: true
        schema:
          $ref: '#/definitions/types.MaterialRequestExport'
      produces:
      - application/vnd.openxmlformats-officedocument.wordprocessingml.document
      responses:
        "200":
          description: DOCX file download
          schema:
            type: file
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/types.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.Response'
      security:
      - BearerAuth: []
      summary: Export material request to DOCX
      tags:
      - material-requests
  /materials-request/filter:
    post:
      consumes:
      - application/json
      description: Retrieve material requests based on filter criteria
      parameters:
      - description: Filter criteria for material requests
        in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/types.MaterialRequestFilter'
      produces:
      - application/json
      responses:
        "200":
          description: Material requests filtered successfully
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.MaterialRequest'
                  type: array
              type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/types.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.Response'
      security:
      - BearerAuth: []
      summary: Filter material requests
      tags:
      - material-requests
  /materials-request/update-number:
    post:
      consumes:
      - application/json
      description: Update the number of requests for materials
      parameters:
      - description: Update number of request data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.UpdateNumberOfRequestReq'
      produces:
      - application/json
      responses:
        "200":
          description: Number of requests updated successfully
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/types.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.Response'
      security:
      - BearerAuth: []
      summary: Update number of material requests
      tags:
      - material-requests
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
